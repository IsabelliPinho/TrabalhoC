#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>

#define MAX_CONTAS 100

int numeroConta[MAX_CONTAS];
char titular[MAX_CONTAS][50];
char cpf[MAX_CONTAS][12]; // cpf é char pq se não ele não pega os 0
float saldo[MAX_CONTAS];
int totalContas = 0;

//  pra validar CPF
int validarCPF(const char *cpf)
{
    return strlen(cpf) == 11 && strspn(cpf, "0123456789") == 11;
}

//!--------------------------------------------------------------------------

void criarConta()
{
    if (totalContas >= MAX_CONTAS)
    {
        printf("\nLimite de contas criadas alcançado!\n");
        return;
    }
    numeroConta[totalContas] = totalContas + 1;

    printf("\n- Criar Conta -\n");
    for (int i = 0; i < 50; i++)
    {
        printf("-");
    }

    printf("\nDigite o nome do titular da conta:\n");
    scanf(" %[^\n]%*c", titular[totalContas]);

    char cpfTemp[12];
    do
    {
        printf("\nDigite o CPF do titular da conta (11 dígitos, apenas números):\n");
        scanf(" %[^\n]%*c", cpfTemp);

        if (!validarCPF(cpfTemp))
        {
            printf("CPF inválido! Deve ter exatamente 11 dígitos e conter apenas números.\n");
        }
    } while (!validarCPF(cpfTemp));

    strcpy(cpf[totalContas], cpfTemp);

    saldo[totalContas] = 0.0;
    totalContas++;

    printf("\nConta criada com sucesso! O número da sua conta é: %d e seu saldo atual é de: R$%.2f\n", numeroConta[totalContas - 1], saldo[totalContas - 1]);
}

//!--------------------------------------------------------------------------

void depositar()
{
    int numero;
    float valor;

    printf("\n- Depositar -\n");
    for (int i = 0; i < 50; i++)
    {
        printf("-");
    }

    printf("\nDigite o número da conta para depósito:\n");
    scanf("%d", &numero);

    if (numero <= 0 || numero > totalContas)
    {
        printf("\nConta não encontrada!\n");
        return;
    }

    if (numeroConta[numero - 1] == -1) {
    printf("\nEsta conta foi fechada e não está disponível para operações.\n");
    return;
}

    printf("\nDigite o valor a ser depositado: R$\n");
    scanf("%f", &valor);

    saldo[numero - 1] += valor;

    printf("\nDepósito feito com sucesso!\n");
    printf("O seu saldo atual é de: R$%.2f\n", saldo[numero - 1]);
}

//!--------------------------------------------------------------------------

void sacar()
{
    int numero;
    float valor;

    printf("\n- Sacar -\n");
    for (int i = 0; i < 50; i++)
    {
        printf("-");
    }

    printf("\nDigite o número da conta para saque:\n");
    scanf("%d", &numero);

    if (numero <= 0 || numero > totalContas)
    {
        printf("\nConta não encontrada!\n");
        return;
    }

    if (numeroConta[numero - 1] == -1) {
    printf("\nEsta conta foi fechada e não está disponível para operações.\n");
    return;
}

    printf("\nDigite o valor a ser sacado: R$\n");
    scanf("%f", &valor);

    if (valor > saldo[numero - 1])
    {
        printf("\nSaldo insuficiente!\n");
        return;
    }

    saldo[numero - 1] -= valor;

    printf("\nSaque feito com sucesso!\n");
    printf("O seu saldo atual é de: R$%.2f\n", saldo[numero - 1]);
}

//!--------------------------------------------------------------------------

void transferir()
{
    int numero, numero2;
    float valor;

    printf("\n- Transferir Valor -\n");
    for (int i = 0; i < 50; i++)
    {
        printf("-");
    }

    printf("\nDigite o número da conta de origem:\n");
    scanf("%d", &numero);

    if (numero <= 0 || numero > totalContas)
    {
        printf("\nConta não encontrada!\n");
        return;
    }

    if (numeroConta[numero - 1] == -1) {
    printf("\nEsta conta foi fechada e não está disponível para operações.\n");
    return;
}

    printf("\nDigite o número da conta de destino:\n");
    scanf("%d", &numero2);

    if (numero2 <= 0 || numero2 > totalContas)
    {
        printf("\nConta não encontrada!\n");
        return;
    }
    if (numero2 == numero)
    {
        printf("\nNão é possível transferir para a mesma conta!\n");
        return;
    }
    
    if (numeroConta[numero2 - 1] == -1) {
    printf("\nEsta conta foi fechada e não está disponível para operações.\n");
    return;
    }

    printf("\nDigite o valor a ser transferido: R$\n");
    scanf("%f", &valor);

    if (valor > saldo[numero - 1])
    {
        printf("\nSaldo insuficiente!\n");
        return;
    }

    time_t tempo;
    time(&tempo);

    saldo[numero - 1] -= valor;
    saldo[numero2 - 1] += valor;

    printf("\nTransferência realizada com sucesso!\n");
    printf("Saldo restante da conta de origem: R$%.2f\n", saldo[numero - 1]);
    printf("Data/Hora da Transferência: %s\n", ctime(&tempo));
}

//!--------------------------------------------------------------------------

void VisuConta()
{
    int numero;

    printf("\n- Visualizar Conta -\n");
    for (int i = 0; i < 50; i++)
    {
        printf("-");
    }

    printf("\nDigite o número da conta a ser visualizada:\n");
    scanf("%d", &numero);

    if (numero <= 0 || numero > totalContas)
    {
        printf("Conta não encontrada!\n");
        return;
    }

    if (numeroConta[numero - 1] == -1) {
    printf("\nEsta conta foi fechada e não está disponível para operações.\n");
    return;
}

    printf("\nNúmero da conta: %d\n", numeroConta[numero - 1]);
    printf("Titular da conta: %s\n", titular[numero - 1]);
    printf("CPF do titular: %s\n", cpf[numero - 1]);
    printf("Saldo da conta: R$%.2f\n", saldo[numero - 1]);
}

//!--------------------------------------------------------------------------

void AtualizarDados() {
    int numero;
    int opcao;
    char novoTitular[50];
    char novoCpf[12];

    void atuTitular(){
        printf("\nDigite o novo nome do titular:\n");
        scanf(" %[^\n]%*c", novoTitular);
        strcpy(titular[numero - 1], novoTitular); // Atualiza o nome do titular
        printf("\nNome atualizado com sucesso! O novo nome do titular é: %s\n", novoTitular);
    }

    void atuCPF(){
        printf("\nDigite o novo CPF do titular (apenas números):\n");
        scanf(" %[^\n]%*c", novoCpf);
        strcpy(cpf[numero - 1], novoCpf); // Atualiza o CPF do titular
        printf("\nCPF atualizado com sucesso! O novo CPF do titular é: %s\n", novoCpf);
    }

    printf("\n- Atualizar Dados do Titular -\n");
    for (int i = 0; i < 50; i++) {
        printf("-");
    }

    printf("\nDigite o número da conta que deseja atualizar:\n");
    scanf("%d", &numero);

    if (numero <= 0 || numero > totalContas) {
        printf("\nConta não encontrada!\n");
        return;
    }

    if (numeroConta[numero - 1] == -1) {
    printf("\nEsta conta foi fechada e não está disponível para operações.\n");
    return;
}

    printf("\nO que você deseja atualizar?\n");
    printf("1. Nome do titular\n");
    printf("2. CPF do titular\n");
    printf("3. Nome e CPF\n");
    printf("Escolha uma opção: ");
    scanf("%d", &opcao);

    switch (opcao) {
        case 1:
            atuTitular();
            break;
        case 2:
            atuCPF();
            break;
        case 3:
            atuTitular();
            atuCPF();
            break;
        default:
            printf("Opção inválida!\n");
    }
}
//!--------------------------------------------------------------------------

void fecharConta()
{
     int numero;

    printf("\n- Fechar Conta Bancária -\n");
    for (int i = 0; i < 50; i++) {
        printf("-");
    }

    printf("\nDigite o número da conta que deseja fechar:\n");
    scanf("%d", &numero);

    if (numero <= 0 || numero > totalContas) {
        printf("\nConta não encontrada!\n");
        return;
    }

    if (numeroConta[numero - 1] == -1) {
    printf("\nEsta conta já foi fechada e não está disponível para operações.\n");
    return;
}

   if(saldo[numero - 1] == 0.0){

    // Confirma
    printf("\nTem certeza que deseja fechar a conta %d (%s)? (1 para Sim / 0 para Não): ", numeroConta[numero - 1], titular[numero - 1]);
    int confirmar;
    scanf("%d", &confirmar);

    if (confirmar == 1) {
        numeroConta[numero - 1] = -1; // Definir como -1 para indicar que a conta está fechada, pois apagar a conta e decrementar o total faria com que o numero das outras contas fosse alterado.
        printf("\nConta fechada com sucesso!\n");
    } else {
        printf("\nOperação de fechamento cancelada.\n");
    }
   } else{
    printf("Antes de fecha-lá, saque ou transfira o saldo da conta.\n");
   }
}

//!--------------------------------------------------------------------------

void exibirMenu()
{
    printf("\n--- Simulador de Gerenciamento de Contas Bancárias ---\n");
    printf("\n1. Criar nova conta\n");
    printf("2. Depositar\n");
    printf("3. Sacar\n");
    printf("4. Transferir\n");
    printf("5. Visualizar Conta\n");
    printf("6. Atualizar dados do titular (nome ou CPF)\n");
    printf("7. Fechar conta bancária\n");
    printf("8. Sair\n");
    printf("\nEscolha uma opção: ");
}

//!--------------------------------------------------------------------------

int main()
{
    int opcao;

    do
    {
        exibirMenu();

        if (scanf("%d", &opcao) != 1)
        {
            printf("\nEntrada invalida! Tente novamente.\n");
            while (getchar() != '\n')
                ;
            continue;
        }

        switch (opcao)
        {
        case 1:
            criarConta();
            break;
        case 2:
            depositar();
            break;
        case 3:
            sacar();
            break;
        case 4:
            transferir();
            break;
        case 5:
            VisuConta();
            break;
        case 6:
            AtualizarDados();
            break;
        case 7:
            fecharConta();
            break;
        case 8:
            printf("Saindo do programa...\n");
            break;
        default:
            printf("Opção inválida! Tente novamente.\n");
        }

    } while (opcao != 8);

    return 0;
}
